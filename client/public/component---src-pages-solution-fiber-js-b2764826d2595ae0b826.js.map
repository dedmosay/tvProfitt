{"version":3,"sources":["webpack://profitt/./src/components/MinImage/index.js","webpack://profitt/./src/components/SolutionPath/ListItem/index.js","webpack://profitt/./src/components/SolutionPath/index.js","webpack://profitt/./src/components/layout/Layout/Main/LinksSolution/index.js","webpack://profitt/./src/modules/Solution/General/index.js","webpack://profitt/./src/modules/Solution/index.js","webpack://profitt/./src/pages/solution/fiber.js"],"names":["props","query","render","data","image","images","edges","find","n","node","relativePath","includes","filename","alt","fluid","childImageSharp","ListItem","to","link","className","type","MinImage","img_A","name","discription","connect","state","isLanguage","app","device","list_devices","JSONList_devices_ru","JSONList_devices_en","Layout","Solution","map","list","index","dev","div_commut","div_fiber","div_stream","div_mixing","div_video","div_audio","div_sync","div_cam_chanel","div_asi_t2mi","div_accessory","div_modul","div_multiview","key","img_B","img_C","solution","JSONData_ru","JSONData_en","href","target","rel","camera_chanel","fiber","multiview","syncSystem","asi_t2mi","stream","mixing","commutation","video","audio","accessory","modulSystem","General","children","undefined","FiberSystemPage"],"mappings":"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","file":"component---src-pages-solution-fiber-js-b2764826d2595ae0b826.js","sourcesContent":["import React from 'react';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\n\r\nconst Image = props => (\r\n    <StaticQuery\r\n        query={graphql`\r\n      query {\r\n        images: allFile {\r\n          edges {\r\n            node {\r\n              relativePath\r\n              name\r\n              childImageSharp {\r\n                fluid  (\r\n                maxWidth: 300\r\n                quality: 70\r\n                ) {\r\n                  aspectRatio\r\n                  originalName\r\n                  sizes\r\n                  src\r\n                  srcSet\r\n                  srcWebp\r\n                 # tracedSVG\r\n                 # ...GatsbyImageSharpFluid_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n\r\n        render={data => {\r\n            const image = data.images.edges.find(n => {\r\n                return n.node.relativePath.includes(props.filename);\r\n            });\r\n            if (!image) {\r\n                return null;\r\n            }\r\n            return <Img alt={props.alt} fluid={image.node.childImageSharp.fluid} />;\r\n        }}\r\n    />\r\n);\r\n\r\nexport default Image;","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./ListItem.scss\";\r\nimport MinImage from \"../../MinImage\";\r\n\r\nexport default function ListItem(props) {\r\n  return (\r\n    <Link to={props.link}>\r\n      <div className=\"ListItem\">\r\n        <button className=\"ListItem__btn\">\r\n          <div className=\"ListItem__container\">\r\n            <div className=\"ListItem__container_type\">{props.type}</div>\r\n            <div className=\"ListItem__container_image\">\r\n              <div className=\"viewImage\">\r\n                <div className=\"viewImage_A\">\r\n                  <MinImage\r\n                    alt={`${props.img_A}.- front`}\r\n                    filename={`${props.img_A}.jpg`}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"ListItem__container_name\">{props.name}</div>\r\n            <div className=\"ListItem__container_discription\">\r\n              {props.discription}\r\n            </div>\r\n          </div>\r\n        </button>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport JSONList_devices_ru from \"../../../content/locales/ru/devices_ru.json\";\r\nimport JSONList_devices_en from \"../../../content/locales/en/devices_en.json\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nimport \"./SolutionPath.scss\";\r\nimport Layout from \"../layout/Layout\";\r\nimport Solution from \"../../modules/Solution\";\r\n\r\nfunction SolutionPath(props) {\r\n  let list_devices = null;\r\n  if (props.isLanguage) {\r\n    list_devices = JSONList_devices_ru.ru[0].list_devices;\r\n  } else {\r\n    list_devices = JSONList_devices_en.en[0].list_devices;\r\n  }\r\n  let device;\r\n  return (\r\n    <Layout>\r\n      <Solution>\r\n        <div className=\"Category\">\r\n          <div className=\"Category__item\">\r\n            {list_devices.map((list, index) => {\r\n              switch (props.dev) {\r\n                case \"div_commut\": device = list.div_commut;\r\n                  break;\r\n                case \"div_fiber\": device = list.div_fiber;\r\n                  break;\r\n                case \"div_stream\": device = list.div_stream;\r\n                  break;\r\n                case \"div_mixing\": device = list.div_mixing;\r\n                  break;\r\n                case \"div_video\": device = list.div_video;\r\n                  break;\r\n                case \"div_audio\": device = list.div_audio;\r\n                  break;\r\n                case \"div_sync\": device = list.div_sync;\r\n                  break;\r\n                case \"div_cam_chanel\": device = list.div_cam_chanel;\r\n                  break;\r\n                case \"div_asi_t2mi\": device = list.div_asi_t2mi;\r\n                  break;\r\n                case \"div_accessory\": device = list.div_accessory;\r\n                  break;\r\n                case \"div_modul\": device = list.div_modul;\r\n                  break;\r\n                case \"div_modul\": device = list.div_modul;\r\n                  break;\r\n                case \"div_multiview\": device = list.div_multiview;\r\n                  break;\r\n               default:\r\n                  return null;\r\n              }\r\n              if (device === \"Eсть\" || device === \"Yes\") {\r\n                return (\r\n                  <ListItem\r\n                    key={index}\r\n                    name={list.name}\r\n                    discription={list.discription}\r\n                    type={list.type}\r\n                    link={list.link}\r\n                    img_A={list.img_A}\r\n                    img_B={list.img_B}\r\n                    img_C={list.img_C}\r\n                  />\r\n                );\r\n              } else {\r\n                return null;\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      </Solution>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    isLanguage: state.app.isLanguage,\r\n  }),\r\n  null\r\n)(SolutionPath);\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { connect } from \"react-redux\";\r\nimport JSONData_ru from \"../../../../../../content/locales/ru/translation_ru.json\";\r\nimport JSONData_en from \"../../../../../../content/locales/en/translation_en.json\";\r\n\r\nfunction LinksSolution({ isLanguage }) {\r\n  let solution = null;\r\n  if (isLanguage) {\r\n    solution = JSONData_ru.ru[1].solution;\r\n  } else {\r\n    solution = JSONData_en.en[1].solution;\r\n  }\r\n\r\n  return (\r\n    <div className=\"LinksSolution\">\r\n      <a href=\"http://www.profitt.ru\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <button>Profitt.ru</button>\r\n      </a>\r\n      <Link to=\"/solution/camera-chanel\">\r\n        <button>{solution.camera_chanel}</button>\r\n      </Link>\r\n      <Link to=\"/solution/fiber\">\r\n        <button>{solution.fiber}</button>\r\n      </Link>\r\n      {/* MultiView */}\r\n      <Link to=\"/solution/multiview\">\r\n        <button>{solution.multiview}</button>\r\n      </Link>\r\n      <Link to=\"/solution/sync-system\">\r\n        <button>{solution.syncSystem}</button>\r\n      </Link>\r\n      {/* ASI, T2MI */}\r\n      <Link to=\"/solution/asi_t2mi\">\r\n        <button> {solution.asi_t2mi}</button>\r\n      </Link>\r\n      <Link to=\"/solution/stream\">\r\n        <button> {solution.stream}</button>\r\n      </Link>\r\n      <Link to=\"/solution/mixing\">\r\n        <button>{solution.mixing}</button>\r\n      </Link>\r\n      <Link to=\"/solution/commutation\">\r\n        <button>{solution.commutation}</button>\r\n      </Link>\r\n      <Link to=\"/solution/video\">\r\n        <button>{solution.video}</button>\r\n      </Link>\r\n      <Link to=\"/solution/audio\">\r\n        <button> {solution.audio}</button>\r\n      </Link>\r\n      <Link to=\"/solution/accessory\">\r\n        <button>{solution.accessory}</button>\r\n      </Link>\r\n      <Link to=\"/solution/modul-system\">\r\n        <button>{solution.modulSystem}</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    isLanguage: state.app.isLanguage,\r\n  }),\r\n  null\r\n)(LinksSolution);\r\n","import React from \"react\";\r\n// import Image from \"../../../components/Image\";\r\nimport \"./style.scss\";\r\nimport LinksSolution from \"../../../components/layout/Layout/Main/LinksSolution\";\r\n\r\nexport default function General() {\r\n  return (\r\n    <div className=\"General\">\r\n      <div className=\"general\">\r\n        <div className=\"general__content\">\r\n          <div className=\"divisions\">\r\n            <div className=\"divisions__next\">\r\n              {/* <div className=\"divisions-standalone\">\r\n                <button>solo_standev</button>\r\n              </div>\r\n              <div className=\"divisions-probox\">\r\n                <button>solo_pbx</button>\r\n              </div>\r\n              <div className=\"divisions-profnext\">\r\n                <button>solo_profnext</button>\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n       <div className=\"purposes\">\r\n            <div className=\"purposes__next\">\r\n              <LinksSolution />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport General from \"../Solution/General\"\r\nimport \"./style.scss\";\r\nimport LinksSolution from \"../../components/layout/Layout/Main/LinksSolution\";\r\n\r\nexport default function Solution({ children }) {\r\n  function stateChildren() {\r\n    return (children === undefined ? <General /> : children)\r\n  }\r\n  return (\r\n    <div className=\"Solutions\">\r\n      <div className=\"solution\">\r\n        <div className=\"solution__navbar\">\r\n         <LinksSolution />\r\n        </div>\r\n        <div className=\"solution__content\">\r\n          {stateChildren()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SolutionPath from \"../../components/SolutionPath\";\r\n\r\nexport default function FiberSystemPage() {\r\n  return <SolutionPath dev={\"div_fiber\"} />\r\n}\r\n"],"sourceRoot":""}